Rechnungen
==========

.. image:: receipts.jpg

Foto von `Carli Jeen auf unsplash.com <https://unsplash.com/@carlijeen?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash>`__
 

In diesem Kapitel lernst du:
----------------------------

======= ===========================================
Bereich Thema
======= ===========================================
üöÄ      Zahlen in einer Einkaufsliste summieren
‚öô       √ºber Listen iterieren
üí°      die Methode ``list.append`` verwenden
üîÄ      eine Liste in eine neue transformieren
üêû      ValueErrors zu beheben
======= ===========================================


Aufgabe 1
----------

Um gr√∂√üere Datenmengen zu verarbeiten, k√∂nnen wir uns nicht f√ºr jede Zahl einen neuen Variablennamen ausdenken.
Stattdessen speichern wir mehrere Zahlen in einer **Liste**.

Das folgende Programm summiert Zahlen in einer Liste.
Vervollst√§ndige den Code, indem du ``kosten``, ``for``, ``element``, ``summe`` einsetzt.

.. code:: python

   kosten = [8, 5, 20, 12, 1]
   summe = 0
   ___ element in ___:
       ___ += ___
   print(summe)


Aufgabe 2: Methoden von Listen
------------------------------

Finde heraus was die Ausdr√ºcke mit der Liste in der Mitte tun.

.. figure:: lists.png
   :alt: Listen Aufgabe


Aufgabe 3: Ein Element hinzuf√ºgen 
---------------------------------

Du m√∂chtest ein zus√§tzliches Element zur Liste hinzuf√ºgen:

.. code:: python3

   kosten = [8, 5, 20, 12, 1]
   extra = 4

Verwende eine Methode aus Aufgabe 2, um das zus√§tzliche Element an die Liste anzuh√§ngen.
Rechne dann die Summe aus.


Aufgabe 4: Verketten
--------------------

Erkl√§re den Unterchied zwischen folgenden Ausdr√ºcken:

.. code:: python3

   >>> [1, 2 + 3, 4]

   >>> [1, 2] + [3, 4]

   >>> ["1", "2" + "3", "4"]

   >>> ["1, 2" + "3, 4"]

   >>> "[1, 2" + "3, 4]"


Aufgabe 5: Puzzle
------------------

Verwende die Ausdr√ºcke, um die Liste wie gezeigt zu ver√§ndern.
Verwende jeden Ausdruck genau ein Mal.

.. figure:: list_funcs2.png
   :alt: list funcs Aufgabe2


Aufgabe 6: Listen transformieren
--------------------------------

Bisweilen ist es n√ºtzlich, eine Liste in eine neue umzuwandeln.
Dies nennt man **Transformieren** der Liste.
Sortiere die Zeilen in folgendem Programm:

.. code:: python3

   print(summe)
   kosten = ["8", "5", "20", "12", "1"]
   zahlen.append(int(item))
   for item in kosten:
   summe = sum(zahlen)
   zahlen = []


Aufgabe 7: Rechnungshelfer
--------------------------

Schreibe ein Programm, das Rechnungen zusammenz√§hlt.
Der Benutzer gibt Zahlen ein (eine auf einmal).
Falls sie nichts eingeben (einen leeren String), rechnet das Programm den Gesamtwert der eingegebenen Betr√§ge aus.

Die Ausgabe des Programms k√∂nnte so aussehen:

::

   Bitte gibt Betr√§ge auf den Rechnungen ein (eine Zahl pro Zeile):
   13
   8
   5
   21

   Die Summe der Betr√§ge ist 47


.. hint::

   Zum Eingeben der Werte ben√∂tigst du eine ``while``-Schleife.


Reflexionsfragen
----------------

-  Wie kannst du eine Liste erstellen?
-  Wie kannst du Elemente zu einer Liste hinzuf√ºgen?
-  Wie kannst du eine `for`-Schleife √ºber eine Liste laufen lassen?
